module data_memory_tb;

    // Entradas
    reg [31:0] Address;
    reg [31:0] WriteData;
    reg MemWrite;
    reg clk;

    // Saída
    wire [31:0] ReadData;

    // Instancia o módulo a ser testado
    data_memory uut (
        .Address(Address),
        .WriteData(WriteData),
        .MemWrite(MemWrite),
        .clk(clk),
        .ReadData(ReadData)
    );

    // Gera o clock
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // Clock com período de 10 unidades
    end

    // Estímulos de teste
    initial begin
        // Inicializa sinais
        Address = 0;
        WriteData = 0;
        MemWrite = 0;

        #10;

        // Escreve 32'hDEADBEEF na posição 0
        Address = 32'h00000000;
        WriteData = 32'hDEADBEEF;
        MemWrite = 1;
        #10;  // Espera 1 ciclo de clock

        // Desativa escrita
        MemWrite = 0;
        #10;

        // Lê o dado da mesma posição
        Address = 32'h00000000;
        #5;

        // Mostra o resultado da leitura
        $display("Dado lido da memória: %h", ReadData);  // Deve mostrar DEADBEEF

        #10;

        $finish;
    end

endmodule
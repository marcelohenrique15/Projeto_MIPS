module tb_registrador;

    // Declaração dos sinais de teste
    reg clk;                    // Sinal de clock
    reg reset;                  // Sinal de reset
    reg [4:0] rs, rt, rd;       // Endereços dos registradores
    reg [31:0] write_data;      // Dados a serem escritos no registrador
    reg write_enable;           // Sinal de controle para escrever no registrador
    wire [31:0] read_data1, read_data2; // Dados lidos dos registradores rs e rt

    // Instancia o módulo de registradores
    registrador uut (
        .clk(clk),
        .reset(reset),
        .rs(rs),
        .rt(rt),
        .rd(rd),
        .write_data(write_data),
        .write_enable(write_enable),
        .read_data1(read_data1),
        .read_data2(read_data2)
    );

    // Geração de clock (ciclo de 10 unidades de tempo)
    always begin
        #5 clk = ~clk;
    end

    // Processo de simulação
    initial begin
        // Inicialização dos sinais
        clk = 0;
        reset = 0;
        write_enable = 0;
        rs = 5'b00000;   // Registrador 0
        rt = 5'b00001;   // Registrador 1
        rd = 5'b00010;   // Registrador 2
        write_data = 32'hDEADBEEF; // Dados a serem escritos no registrador 2

        // Teste 1: Reset do sistema
        $display("Teste 1: Reset");
        reset = 1; // Ativa o reset
        #10;       // Aguarda 10 unidades de tempo
        reset = 0; // Desativa o reset
        #10;
        
        // Teste 2: Escrever no registrador 2
        $display("Teste 2: Escrever no registrador 2");
        write_enable = 1; // Permite a escrita
        rd = 5'b00010;    // Escolhe o registrador 2
        write_data = 32'h12345678; // Dados a serem escritos
        #10; // Aguarda a escrita
        write_enable = 0; // Desativa a escrita

        // Teste 3: Ler os dados do registrador 2
        $display("Teste 3: Ler os dados do registrador 2");
        rs = 5'b00010; // Leitura do registrador 2
        rt = 5'b00001; // Leitura do registrador 1 (não foi escrito ainda)
        #10;

        // Exibe os resultados
        $display("Valor de read_data1 (registrador 2): %h", read_data1);
        $display("Valor de read_data2 (registrador 1): %h", read_data2);

        // Teste 4: Escrever novamente no registrador 1
        $display("Teste 4: Escrever no registrador 1");
        write_enable = 1; // Permite a escrita
        rd = 5'b00001;    // Escolhe o registrador 1
        write_data = 32'h87654321; // Dados a serem escritos
        #10; // Aguarda a escrita
        write_enable = 0; // Desativa a escrita
        
        // Teste 5: Ler os dados do registrador 1
        $display("Teste 5: Ler os dados do registrador 1");
        rs = 5'b00001; // Leitura do registrador 1
        rt = 5'b00010; // Leitura do registrador 2
        #10;

        // Exibe os resultados
        $display("Valor de read_data1 (registrador 1): %h", read_data1);
        $display("Valor de read_data2 (registrador 2): %h", read_data2);

        // Finaliza a simulação
        $finish;
    end

endmodule